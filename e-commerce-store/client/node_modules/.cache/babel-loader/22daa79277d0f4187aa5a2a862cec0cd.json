{"ast":null,"code":"const Request = require(\"../Request\");\n\nconst Promise = require(\"promise\");\n\nconst Errors = require(\"../Errors\");\n\nconst buildInputData = require(\"../util/buildInputData\");\n\nmodule.exports = (batch, sender, Result, keyTranslationFormat) => {\n  if (batch.isEmpty()) throw new Errors.BatchEmptyError();\n  let request = new Request();\n  if (batch.length() === 1) request.parameters = generateRequestPayload(batch)[0];else request.payload = generateRequestPayload(batch);\n  return new Promise((resolve, reject) => {\n    sender.send(request).then(response => {\n      if (response.error) reject(response.error);\n      resolve(assignResultsToLookups(batch, response));\n    }).catch(reject);\n  });\n\n  function generateRequestPayload(batch) {\n    return batch.lookups.map(lookup => {\n      return buildInputData(lookup, keyTranslationFormat);\n    });\n  }\n\n  function assignResultsToLookups(batch, response) {\n    response.payload.map(rawResult => {\n      let result = new Result(rawResult);\n      let lookup = batch.getByIndex(result.inputIndex);\n      lookup.result.push(result);\n    });\n    return batch;\n  }\n};","map":{"version":3,"sources":["/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/node_modules/smartystreets-javascript-sdk/src/util/sendBatch.js"],"names":["Request","require","Promise","Errors","buildInputData","module","exports","batch","sender","Result","keyTranslationFormat","isEmpty","BatchEmptyError","request","length","parameters","generateRequestPayload","payload","resolve","reject","send","then","response","error","assignResultsToLookups","catch","lookups","map","lookup","rawResult","result","getByIndex","inputIndex","push"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,wBAAD,CAA9B;;AAEAI,MAAM,CAACC,OAAP,GAAiB,CAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,oBAAxB,KAAiD;AACjE,MAAIH,KAAK,CAACI,OAAN,EAAJ,EAAqB,MAAM,IAAIR,MAAM,CAACS,eAAX,EAAN;AAErB,MAAIC,OAAO,GAAG,IAAIb,OAAJ,EAAd;AAEA,MAAIO,KAAK,CAACO,MAAN,OAAmB,CAAvB,EAA0BD,OAAO,CAACE,UAAR,GAAqBC,sBAAsB,CAACT,KAAD,CAAtB,CAA8B,CAA9B,CAArB,CAA1B,KACKM,OAAO,CAACI,OAAR,GAAkBD,sBAAsB,CAACT,KAAD,CAAxC;AAEL,SAAO,IAAIL,OAAJ,CAAY,CAACgB,OAAD,EAAUC,MAAV,KAAqB;AACvCX,IAAAA,MAAM,CAACY,IAAP,CAAYP,OAAZ,EACEQ,IADF,CACOC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACC,KAAb,EAAoBJ,MAAM,CAACG,QAAQ,CAACC,KAAV,CAAN;AAEpBL,MAAAA,OAAO,CAACM,sBAAsB,CAACjB,KAAD,EAAQe,QAAR,CAAvB,CAAP;AACA,KALF,EAMEG,KANF,CAMQN,MANR;AAOA,GARM,CAAP;;AAUA,WAASH,sBAAT,CAAgCT,KAAhC,EAAuC;AACtC,WAAOA,KAAK,CAACmB,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AACpC,aAAOxB,cAAc,CAACwB,MAAD,EAASlB,oBAAT,CAArB;AACA,KAFM,CAAP;AAGA;;AAED,WAASc,sBAAT,CAAgCjB,KAAhC,EAAuCe,QAAvC,EAAiD;AAChDA,IAAAA,QAAQ,CAACL,OAAT,CAAiBU,GAAjB,CAAqBE,SAAS,IAAI;AACjC,UAAIC,MAAM,GAAG,IAAIrB,MAAJ,CAAWoB,SAAX,CAAb;AACA,UAAID,MAAM,GAAGrB,KAAK,CAACwB,UAAN,CAAiBD,MAAM,CAACE,UAAxB,CAAb;AAEAJ,MAAAA,MAAM,CAACE,MAAP,CAAcG,IAAd,CAAmBH,MAAnB;AACA,KALD;AAOA,WAAOvB,KAAP;AACA;AACD,CAlCD","sourcesContent":["const Request = require(\"../Request\");\nconst Promise = require(\"promise\");\nconst Errors = require(\"../Errors\");\nconst buildInputData = require(\"../util/buildInputData\");\n\nmodule.exports = (batch, sender, Result, keyTranslationFormat) => {\n\tif (batch.isEmpty()) throw new Errors.BatchEmptyError;\n\n\tlet request = new Request();\n\n\tif (batch.length() === 1) request.parameters = generateRequestPayload(batch)[0];\n\telse request.payload = generateRequestPayload(batch);\n\n\treturn new Promise((resolve, reject) => {\n\t\tsender.send(request)\n\t\t\t.then(response => {\n\t\t\t\tif (response.error) reject(response.error);\n\n\t\t\t\tresolve(assignResultsToLookups(batch, response));\n\t\t\t})\n\t\t\t.catch(reject);\n\t});\n\n\tfunction generateRequestPayload(batch) {\n\t\treturn batch.lookups.map((lookup) => {\n\t\t\treturn buildInputData(lookup, keyTranslationFormat);\n\t\t});\n\t}\n\n\tfunction assignResultsToLookups(batch, response) {\n\t\tresponse.payload.map(rawResult => {\n\t\t\tlet result = new Result(rawResult);\n\t\t\tlet lookup = batch.getByIndex(result.inputIndex);\n\n\t\t\tlookup.result.push(result);\n\t\t});\n\n\t\treturn batch;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}