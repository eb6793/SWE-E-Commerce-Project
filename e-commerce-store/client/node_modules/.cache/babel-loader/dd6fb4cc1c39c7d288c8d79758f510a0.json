{"ast":null,"code":"const Response = require(\"./Response\");\n\nconst Axios = require(\"axios-proxy-fix\");\n\nconst axiosRetry = require(\"axios-retry\");\n\nconst Promise = require(\"promise\");\n\nclass HttpSender {\n  constructor(timeout = 10000, retries = 5, proxyConfig, debug = false) {\n    axiosRetry(Axios, {\n      retries: retries\n    });\n    this.timeout = timeout;\n    this.proxyConfig = proxyConfig;\n    if (debug) this.enableDebug();\n  }\n\n  buildRequestConfig({\n    payload,\n    parameters,\n    headers,\n    baseUrl\n  }) {\n    let config = {\n      method: \"GET\",\n      timeout: this.timeout,\n      params: parameters,\n      headers: headers,\n      baseURL: baseUrl,\n      validateStatus: function (status) {\n        return status < 500;\n      }\n    };\n\n    if (payload) {\n      config.method = \"POST\";\n      config.data = payload;\n    }\n\n    if (this.proxyConfig) config.proxy = this.proxyConfig;\n    return config;\n  }\n\n  buildSmartyResponse(response, error) {\n    if (response) return new Response(response.status, response.data);\n    return new Response(undefined, undefined, error);\n  }\n\n  send(request) {\n    return new Promise((resolve, reject) => {\n      let requestConfig = this.buildRequestConfig(request);\n      Axios(requestConfig).then(response => {\n        let smartyResponse = this.buildSmartyResponse(response);\n        if (smartyResponse.statusCode >= 400) reject(smartyResponse);\n        resolve(smartyResponse);\n      }).catch(error => reject(this.buildSmartyResponse(undefined, error)));\n    });\n  }\n\n  enableDebug() {\n    Axios.interceptors.request.use(request => {\n      console.log('Request:\\r\\n', request);\n      console.log('\\r\\n*******************************************\\r\\n');\n      return request;\n    });\n    Axios.interceptors.response.use(response => {\n      console.log('Response:\\r\\n');\n      console.log('Status:', response.status, response.statusText);\n      console.log('Headers:', response.headers);\n      console.log('Data:', response.data);\n      return response;\n    });\n  }\n\n}\n\nmodule.exports = HttpSender;","map":{"version":3,"sources":["/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/node_modules/smartystreets-javascript-sdk/src/HttpSender.js"],"names":["Response","require","Axios","axiosRetry","Promise","HttpSender","constructor","timeout","retries","proxyConfig","debug","enableDebug","buildRequestConfig","payload","parameters","headers","baseUrl","config","method","params","baseURL","validateStatus","status","data","proxy","buildSmartyResponse","response","error","undefined","send","request","resolve","reject","requestConfig","then","smartyResponse","statusCode","catch","interceptors","use","console","log","statusText","module","exports"],"mappings":"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","sourcesContent":["const Response = require(\"./Response\");\nconst Axios = require(\"axios-proxy-fix\");\nconst axiosRetry = require(\"axios-retry\");\nconst Promise = require(\"promise\");\n\nclass HttpSender {\n\tconstructor(timeout = 10000, retries = 5, proxyConfig, debug = false) {\n\t\taxiosRetry(Axios, {\n\t\t\tretries: retries,\n\t\t});\n\t\tthis.timeout = timeout;\n\t\tthis.proxyConfig = proxyConfig;\n\t\tif (debug) this.enableDebug();\n\t}\n\n\tbuildRequestConfig({payload, parameters, headers, baseUrl}) {\n\t\tlet config = {\n\t\t\tmethod: \"GET\",\n\t\t\ttimeout: this.timeout,\n\t\t\tparams: parameters,\n\t\t\theaders: headers,\n\t\t\tbaseURL: baseUrl,\n\t\t\tvalidateStatus: function (status) {\n\t\t\t\treturn status < 500;\n\t\t\t},\n\t\t};\n\n\t\tif (payload) {\n\t\t\tconfig.method = \"POST\";\n\t\t\tconfig.data = payload;\n\t\t}\n\n\t\tif (this.proxyConfig) config.proxy = this.proxyConfig;\n\t\treturn config;\n\t}\n\n\tbuildSmartyResponse(response, error) {\n\t\tif (response) return new Response(response.status, response.data);\n\t\treturn new Response(undefined, undefined, error)\n\t}\n\n\tsend(request) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet requestConfig = this.buildRequestConfig(request);\n\n\t\t\tAxios(requestConfig)\n\t\t\t\t.then(response => {\n\t\t\t\t\tlet smartyResponse = this.buildSmartyResponse(response);\n\n\t\t\t\t\tif (smartyResponse.statusCode >= 400) reject(smartyResponse);\n\n\t\t\t\t\tresolve(smartyResponse);\n\t\t\t\t})\n\t\t\t\t.catch(error => reject(this.buildSmartyResponse(undefined, error)));\n\t\t});\n\t}\n\n\tenableDebug() {\n\t\tAxios.interceptors.request.use(request => {\n\t\t\tconsole.log('Request:\\r\\n', request);\n\t\t\tconsole.log('\\r\\n*******************************************\\r\\n');\n\t\t\treturn request\n\t\t});\n\n\t\tAxios.interceptors.response.use(response => {\n\t\t\tconsole.log('Response:\\r\\n');\n\t\t\tconsole.log('Status:', response.status, response.statusText);\n\t\t\tconsole.log('Headers:', response.headers);\n\t\t\tconsole.log('Data:', response.data);\n\t\t\treturn response\n\t\t})\n\t}\n}\n\nmodule.exports = HttpSender;"]},"metadata":{},"sourceType":"script"}