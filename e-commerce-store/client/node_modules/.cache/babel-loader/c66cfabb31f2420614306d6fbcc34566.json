{"ast":null,"code":"const HttpSender = require(\"./HttpSender\");\n\nconst SigningSender = require(\"./SigningSender\");\n\nconst BaseUrlSender = require(\"./BaseUrlSender\");\n\nconst AgentSender = require(\"./AgentSender\");\n\nconst StaticCredentials = require(\"./StaticCredentials\");\n\nconst SharedCredentials = require(\"./SharedCredentials\");\n\nconst CustomHeaderSender = require(\"./CustomHeaderSender\");\n\nconst StatusCodeSender = require(\"./StatusCodeSender\");\n\nconst BadCredentialsError = require(\"./Errors\").BadCredentialsError; //TODO: refactor this to work more cleanly with a bundler.\n\n\nconst UsStreetClient = require(\"./us_street/Client\");\n\nconst UsZipcodeClient = require(\"./us_zipcode/Client\");\n\nconst UsAutocompleteClient = require(\"./us_autocomplete/Client\");\n\nconst UsAutocompleteProClient = require(\"./us_autocomplete_pro/Client\");\n\nconst UsExtractClient = require(\"./us_extract/Client\");\n\nconst InternationalStreetClient = require(\"./international_street/Client\");\n\nconst INTERNATIONAL_STREET_API_URI = \"https://international-street.api.smartystreets.com/verify\";\nconst US_AUTOCOMPLETE_API_URL = \"https://us-autocomplete.api.smartystreets.com/suggest\";\nconst US_AUTOCOMPLETE_PRO_API_URL = \"https://us-autocomplete-pro.api.smartystreets.com/lookup\";\nconst US_EXTRACT_API_URL = \"https://us-extract.api.smartystreets.com/\";\nconst US_STREET_API_URL = \"https://us-street.api.smartystreets.com/street-address\";\nconst US_ZIP_CODE_API_URL = \"https://us-zipcode.api.smartystreets.com/lookup\";\n/**\n * The ClientBuilder class helps you build a client object for one of the supported SmartyStreets APIs.<br>\n * You can use ClientBuilder's methods to customize settings like maximum retries or timeout duration. These methods<br>\n * are chainable, so you can usually get set up with one line of code.\n */\n\nclass ClientBuilder {\n  constructor(signer) {\n    if (noCredentialsProvided()) throw new BadCredentialsError();\n    this.signer = signer;\n    this.httpSender = undefined;\n    this.maxRetries = 5;\n    this.maxTimeout = 10000;\n    this.baseUrl = undefined;\n    this.proxy = undefined;\n    this.customHeaders = {};\n    this.debug = undefined;\n\n    function noCredentialsProvided() {\n      return !signer instanceof StaticCredentials || !signer instanceof SharedCredentials;\n    }\n  }\n  /**\n   * @param retries The maximum number of times to retry sending the request to the API. (Default is 5)\n   * @return Returns <b>this</b> to accommodate method chaining.\n   */\n\n\n  withMaxRetries(retries) {\n    this.maxRetries = retries;\n    return this;\n  }\n  /**\n   * @param timeout The maximum time (in milliseconds) to wait for a connection, and also to wait for <br>\n   *                   the response to be read. (Default is 10000)\n   * @return Returns <b>this</b> to accommodate method chaining.\n   */\n\n\n  withMaxTimeout(timeout) {\n    this.maxTimeout = timeout;\n    return this;\n  }\n  /**\n   * @param sender Default is a series of nested senders. See <b>buildSender()</b>.\n   * @return Returns <b>this</b> to accommodate method chaining.\n   */\n\n\n  withSender(sender) {\n    this.httpSender = sender;\n    return this;\n  }\n  /**\n   * This may be useful when using a local installation of the SmartyStreets APIs.\n   * @param url Defaults to the URL for the API corresponding to the <b>Client</b> object being built.\n   * @return Returns <b>this</b> to accommodate method chaining.\n   */\n\n\n  withBaseUrl(url) {\n    this.baseUrl = url;\n    return this;\n  }\n  /**\n   * Use this to specify a proxy through which to send all lookups.\n   * @param host The host of the proxy server (do not include the port).\n   * @param port The port on the proxy server to which you wish to connect.\n   * @param username The username to login to the proxy.\n   * @param password The password to login to the proxy.\n   * @return Returns <b>this</b> to accommodate method chaining.\n   */\n\n\n  withProxy(host, port, username, password) {\n    this.proxy = {\n      host: host,\n      port: port\n    };\n\n    if (username && password) {\n      this.proxy.auth = {\n        username: username,\n        password: password\n      };\n    }\n\n    return this;\n  }\n  /**\n   * Use this to add any additional headers you need.\n   * @param customHeaders A String to Object <b>Map</b> of header name/value pairs.\n   * @return Returns <b>this</b> to accommodate method chaining.\n   */\n\n\n  withCustomHeaders(customHeaders) {\n    this.customHeaders = customHeaders;\n    return this;\n  }\n  /**\n   * Enables debug mode, which will print information about the HTTP request and response to console.log\n   * @return Returns <b>this</b> to accommodate method chaining.\n   */\n\n\n  withDebug() {\n    this.debug = true;\n    return this;\n  }\n\n  buildSender() {\n    if (this.httpSender) return this.httpSender;\n    const httpSender = new HttpSender(this.maxTimeout, this.maxRetries, this.proxy, this.debug);\n    const statusCodeSender = new StatusCodeSender(httpSender);\n    const signingSender = new SigningSender(statusCodeSender, this.signer);\n    const agentSender = new AgentSender(signingSender);\n    const customHeaderSender = new CustomHeaderSender(agentSender, this.customHeaders);\n    const baseUrlSender = new BaseUrlSender(customHeaderSender, this.baseUrl);\n    return baseUrlSender;\n  }\n\n  buildClient(baseUrl, Client) {\n    if (!this.baseUrl) {\n      this.baseUrl = baseUrl;\n    }\n\n    return new Client(this.buildSender());\n  }\n\n  buildUsStreetApiClient() {\n    return this.buildClient(US_STREET_API_URL, UsStreetClient);\n  }\n\n  buildUsZipcodeClient() {\n    return this.buildClient(US_ZIP_CODE_API_URL, UsZipcodeClient);\n  }\n\n  buildUsAutocompleteClient() {\n    return this.buildClient(US_AUTOCOMPLETE_API_URL, UsAutocompleteClient);\n  }\n\n  buildUsAutocompleteProClient() {\n    return this.buildClient(US_AUTOCOMPLETE_PRO_API_URL, UsAutocompleteProClient);\n  }\n\n  buildUsExtractClient() {\n    return this.buildClient(US_EXTRACT_API_URL, UsExtractClient);\n  }\n\n  buildInternationalStreetClient() {\n    return this.buildClient(INTERNATIONAL_STREET_API_URI, InternationalStreetClient);\n  }\n\n}\n\nmodule.exports = ClientBuilder;","map":{"version":3,"sources":["/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/node_modules/smartystreets-javascript-sdk/src/ClientBuilder.js"],"names":["HttpSender","require","SigningSender","BaseUrlSender","AgentSender","StaticCredentials","SharedCredentials","CustomHeaderSender","StatusCodeSender","BadCredentialsError","UsStreetClient","UsZipcodeClient","UsAutocompleteClient","UsAutocompleteProClient","UsExtractClient","InternationalStreetClient","INTERNATIONAL_STREET_API_URI","US_AUTOCOMPLETE_API_URL","US_AUTOCOMPLETE_PRO_API_URL","US_EXTRACT_API_URL","US_STREET_API_URL","US_ZIP_CODE_API_URL","ClientBuilder","constructor","signer","noCredentialsProvided","httpSender","undefined","maxRetries","maxTimeout","baseUrl","proxy","customHeaders","debug","withMaxRetries","retries","withMaxTimeout","timeout","withSender","sender","withBaseUrl","url","withProxy","host","port","username","password","auth","withCustomHeaders","withDebug","buildSender","statusCodeSender","signingSender","agentSender","customHeaderSender","baseUrlSender","buildClient","Client","buildUsStreetApiClient","buildUsZipcodeClient","buildUsAutocompleteClient","buildUsAutocompleteProClient","buildUsExtractClient","buildInternationalStreetClient","module","exports"],"mappings":"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","sourcesContent":["const HttpSender = require(\"./HttpSender\");\nconst SigningSender = require(\"./SigningSender\");\nconst BaseUrlSender = require(\"./BaseUrlSender\");\nconst AgentSender = require(\"./AgentSender\");\nconst StaticCredentials = require(\"./StaticCredentials\");\nconst SharedCredentials = require(\"./SharedCredentials\");\nconst CustomHeaderSender = require(\"./CustomHeaderSender\");\nconst StatusCodeSender = require(\"./StatusCodeSender\");\nconst BadCredentialsError = require(\"./Errors\").BadCredentialsError;\n\n//TODO: refactor this to work more cleanly with a bundler.\nconst UsStreetClient = require(\"./us_street/Client\");\nconst UsZipcodeClient = require(\"./us_zipcode/Client\");\nconst UsAutocompleteClient = require(\"./us_autocomplete/Client\");\nconst UsAutocompleteProClient = require(\"./us_autocomplete_pro/Client\");\nconst UsExtractClient = require(\"./us_extract/Client\");\nconst InternationalStreetClient = require(\"./international_street/Client\");\n\nconst INTERNATIONAL_STREET_API_URI = \"https://international-street.api.smartystreets.com/verify\";\nconst US_AUTOCOMPLETE_API_URL = \"https://us-autocomplete.api.smartystreets.com/suggest\";\nconst US_AUTOCOMPLETE_PRO_API_URL = \"https://us-autocomplete-pro.api.smartystreets.com/lookup\";\nconst US_EXTRACT_API_URL = \"https://us-extract.api.smartystreets.com/\";\nconst US_STREET_API_URL = \"https://us-street.api.smartystreets.com/street-address\";\nconst US_ZIP_CODE_API_URL = \"https://us-zipcode.api.smartystreets.com/lookup\";\n\n/**\n * The ClientBuilder class helps you build a client object for one of the supported SmartyStreets APIs.<br>\n * You can use ClientBuilder's methods to customize settings like maximum retries or timeout duration. These methods<br>\n * are chainable, so you can usually get set up with one line of code.\n */\nclass ClientBuilder {\n\tconstructor(signer) {\n\t\tif (noCredentialsProvided()) throw new BadCredentialsError();\n\n\t\tthis.signer = signer;\n\t\tthis.httpSender = undefined;\n\t\tthis.maxRetries = 5;\n\t\tthis.maxTimeout = 10000;\n\t\tthis.baseUrl = undefined;\n\t\tthis.proxy = undefined;\n\t\tthis.customHeaders = {};\n\t\tthis.debug = undefined;\n\n\t\tfunction noCredentialsProvided() {\n\t\t\treturn !signer instanceof StaticCredentials || !signer instanceof SharedCredentials;\n\t\t}\n\t}\n\n\t/**\n\t * @param retries The maximum number of times to retry sending the request to the API. (Default is 5)\n\t * @return Returns <b>this</b> to accommodate method chaining.\n\t */\n\twithMaxRetries(retries) {\n\t\tthis.maxRetries = retries;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param timeout The maximum time (in milliseconds) to wait for a connection, and also to wait for <br>\n\t *                   the response to be read. (Default is 10000)\n\t * @return Returns <b>this</b> to accommodate method chaining.\n\t */\n\twithMaxTimeout(timeout) {\n\t\tthis.maxTimeout = timeout;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param sender Default is a series of nested senders. See <b>buildSender()</b>.\n\t * @return Returns <b>this</b> to accommodate method chaining.\n\t */\n\twithSender(sender) {\n\t\tthis.httpSender = sender;\n\t\treturn this;\n\t}\n\n\t/**\n\t * This may be useful when using a local installation of the SmartyStreets APIs.\n\t * @param url Defaults to the URL for the API corresponding to the <b>Client</b> object being built.\n\t * @return Returns <b>this</b> to accommodate method chaining.\n\t */\n\twithBaseUrl(url) {\n\t\tthis.baseUrl = url;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Use this to specify a proxy through which to send all lookups.\n\t * @param host The host of the proxy server (do not include the port).\n\t * @param port The port on the proxy server to which you wish to connect.\n\t * @param username The username to login to the proxy.\n\t * @param password The password to login to the proxy.\n\t * @return Returns <b>this</b> to accommodate method chaining.\n\t */\n\twithProxy(host, port, username, password) {\n\t\tthis.proxy = {\n\t\t\thost: host,\n\t\t\tport: port\n\t\t};\n\n\t\tif (username && password) {\n\t\t\tthis.proxy.auth = {\n\t\t\t\tusername: username,\n\t\t\t\tpassword: password\n\t\t\t};\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Use this to add any additional headers you need.\n\t * @param customHeaders A String to Object <b>Map</b> of header name/value pairs.\n\t * @return Returns <b>this</b> to accommodate method chaining.\n\t */\n\twithCustomHeaders(customHeaders) {\n\t\tthis.customHeaders = customHeaders;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables debug mode, which will print information about the HTTP request and response to console.log\n\t * @return Returns <b>this</b> to accommodate method chaining.\n\t */\n\twithDebug() {\n\t\tthis.debug = true;\n\n\t\treturn this;\n\t}\n\n\n\tbuildSender() {\n\t\tif (this.httpSender) return this.httpSender;\n\n\t\tconst httpSender = new HttpSender(this.maxTimeout, this.maxRetries, this.proxy, this.debug);\n\t\tconst statusCodeSender = new StatusCodeSender(httpSender);\n\t\tconst signingSender = new SigningSender(statusCodeSender, this.signer);\n\t\tconst agentSender = new AgentSender(signingSender);\n\t\tconst customHeaderSender = new CustomHeaderSender(agentSender, this.customHeaders);\n\t\tconst baseUrlSender = new BaseUrlSender(customHeaderSender, this.baseUrl);\n\n\t\treturn baseUrlSender;\n\t}\n\n\tbuildClient(baseUrl, Client) {\n\t\tif (!this.baseUrl) {\n\t\t\tthis.baseUrl = baseUrl;\n\t\t}\n\n\t\treturn new Client(this.buildSender());\n\t}\n\n\tbuildUsStreetApiClient() {\n\t\treturn this.buildClient(US_STREET_API_URL, UsStreetClient);\n\t}\n\n\tbuildUsZipcodeClient() {\n\t\treturn this.buildClient(US_ZIP_CODE_API_URL, UsZipcodeClient);\n\t}\n\n\tbuildUsAutocompleteClient() {\n\t\treturn this.buildClient(US_AUTOCOMPLETE_API_URL, UsAutocompleteClient);\n\t}\n\n\tbuildUsAutocompleteProClient() {\n\t\treturn this.buildClient(US_AUTOCOMPLETE_PRO_API_URL, UsAutocompleteProClient);\n\t}\n\n\tbuildUsExtractClient() {\n\t\treturn this.buildClient(US_EXTRACT_API_URL, UsExtractClient);\n\t}\n\n\tbuildInternationalStreetClient() {\n\t\treturn this.buildClient(INTERNATIONAL_STREET_API_URI, InternationalStreetClient);\n\t}\n}\n\nmodule.exports = ClientBuilder;"]},"metadata":{},"sourceType":"script"}