{"ast":null,"code":"var _jsxFileName = \"/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/src/context.js\";\nimport React, { Component } from \"react\"; // removed storeProducts from {}\n// added for testing 4/10\n\nimport axios from \"axios\";\nconst ProductContext = React.createContext(); // *********\n//Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: [],\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      axios.get(\"ttp://localhost:4000/catweallgetalong/products/\").then(response => {\n        this.setState({\n          products: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      /*\n      storeProducts.forEach(item =>{\n          const singleItem = {...item};\n          tempProducts = [...tempProducts,singleItem];\n       })\n      this.setState(()=>{\n          return {products:tempProducts}\n      })*/\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      let tempCart = [...this.state.cart];\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.0825;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total,\n          cartContents: tempCart\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:4000/catweallgetalong/products/\").then(response => {\n      this.setState({\n        products: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer; // *********\n\nexport { ProductProvider, ProductConsumer }; // *********","map":{"version":3,"sources":["/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/src/context.js"],"names":["React","Component","axios","ProductContext","createContext","ProductProvider","state","products","detailProduct","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","get","then","response","setState","data","catch","error","console","log","getItem","id","product","find","item","handleDetail","addToCart","tempProducts","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","cartContents","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// removed storeProducts from {}\n// added for testing 4/10\nimport axios from \"axios\";\n\nconst ProductContext = React.createContext(); // *********\n//Provider\n//Consumer\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: [],\n        cart: [],\n        modalOpen: false,\n        modalProduct: detailProduct,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0,\n    };\n\n    /*componentDidMount(){\n        this.setProducts();\n    }*/\n\n    // altered for testing\n\n    setProducts = () => {\n        axios\n            .get(\"ttp://localhost:4000/catweallgetalong/products/\")\n            .then((response) => {\n                this.setState({ products: response.data });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        /*\n        storeProducts.forEach(item =>{\n            const singleItem = {...item};\n            tempProducts = [...tempProducts,singleItem];\n\n        })\n        this.setState(()=>{\n            return {products:tempProducts}\n        })*/\n    };\n\n    componentDidMount() {\n        axios\n            .get(\"http://localhost:4000/catweallgetalong/products/\")\n            .then((response) => {\n                this.setState({ products: response.data });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getItem = (id) => {\n        const product = this.state.products.find((item) => item.id === id);\n        return product;\n    };\n\n    handleDetail = (id) => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return { detailProduct: product };\n        });\n    };\n\n    // Since not using data, need to determine how to alter data\n    addToCart = (id) => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n        this.setState(\n            () => {\n                return {\n                    products: tempProducts,\n                    cart: [...this.state.cart, product],\n                };\n            },\n            () => {\n                this.addTotals();\n            }\n        );\n    };\n\n    openModal = (id) => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return { modalProduct: product, modalOpen: true };\n        });\n    };\n\n    closeModal = () => {\n        this.setState(() => {\n            return { modalOpen: false };\n        });\n    };\n\n    increment = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find((item) => item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n\n        product.count = product.count + 1;\n        product.total = product.count * product.price;\n\n        this.setState(\n            () => {\n                return {\n                    cart: [...tempCart],\n                };\n            },\n            () => {\n                this.addTotals();\n            }\n        );\n    };\n\n    decrement = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find((item) => item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n\n        product.count = product.count - 1;\n        if (product.count === 0) {\n            this.removeItem(id);\n        } else {\n            product.total = product.count * product.price;\n\n            this.setState(\n                () => {\n                    return {\n                        cart: [...tempCart],\n                    };\n                },\n                () => {\n                    this.addTotals();\n                }\n            );\n        }\n    };\n\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n\n        tempCart = tempCart.filter((item) => item.id !== id);\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n\n        this.setState(\n            () => {\n                return {\n                    cart: [...tempCart],\n                    products: [...tempProducts],\n                };\n            },\n            () => {\n                this.addTotals();\n            }\n        );\n    };\n\n    clearCart = () => {\n        this.setState(\n            () => {\n                return { cart: [] };\n            },\n            () => {\n                this.setProducts();\n                this.addTotals();\n            }\n        );\n    };\n\n    addTotals = () => {\n        let subTotal = 0;\n        let tempCart = [...this.state.cart];\n        this.state.cart.map((item) => (subTotal += item.total));\n        const tempTax = subTotal * 0.0825;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(() => {\n            return {\n                cartSubTotal: subTotal,\n                cartTax: tax,\n                cartTotal: total,\n                cartContents: tempCart,\n            };\n        });\n    };\n\n    render() {\n        return (\n            <ProductContext.Provider\n                value={{\n                    ...this.state,\n                    handleDetail: this.handleDetail,\n                    addToCart: this.addToCart,\n                    openModal: this.openModal,\n                    closeModal: this.closeModal,\n                    increment: this.increment,\n                    decrement: this.decrement,\n                    removeItem: this.removeItem,\n                    clearCart: this.clearCart,\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer; // *********\n\nexport { ProductProvider, ProductConsumer }; // *********\n"]},"metadata":{},"sourceType":"module"}