{"ast":null,"code":"var _jsxFileName = \"/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/src/components/Cart/Checkout.js\";\nimport { ProductConsumer } from \"../../context-product\";\nimport React, { Component } from \"react\";\nimport Title from \"../../components/General/Title\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction HandleDisplayErrors(props) {\n  let buffer = [];\n\n  if (props.display_errors) {\n    if (!props.address_verified) {\n      buffer.push( /*#__PURE__*/React.createElement(\"div\", {\n        key: \"address1\",\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, \"* Please enter a valid Shipping Address.\"));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, buffer);\n}\n\nexport default class Checkout extends Component {\n  constructor(props) {\n    super(props); // Assign state itself, and a default value for items\n\n    this.state = {\n      address_line1: \"\",\n      address_line2: \"\",\n      address_secondary: \"\",\n      address_zipcode: \"\",\n      address_city: \"\",\n      address_state: \"\",\n      email_address: \"\",\n      isAddressChanged: false,\n      id: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      order_confirmed: false\n    };\n    this.address_verified = true;\n    this.display_errors = false;\n    this.cart = [];\n    this.clearCart = [];\n    this.OrderID = \"\";\n    this.directTo = \"\";\n  }\n\n  async componentDidMount() {\n    await this.sessionCheck();\n    await this.loadUserValues();\n    this.forceUpdate();\n  }\n\n  verifyShippingAddress() {\n    return new Promise(resolve => {\n      const SmartyStreetsSDK = require(\"smartystreets-javascript-sdk\");\n\n      const SmartyStreetsCore = SmartyStreetsSDK.core;\n      const Lookup = SmartyStreetsSDK.usStreet.Lookup;\n      let authId = 24176270692624972; // created on smartystreets account page for localhost\n\n      let authToken = process.env.SMARTY_AUTH_TOKEN;\n      const credentials = new SmartyStreetsCore.StaticCredentials(authId, authToken);\n      let verifyAddress = SmartyStreetsCore.buildClient.usStreet(credentials);\n      let batch = new SmartyStreetsCore.Batch();\n      let lookup1 = new Lookup();\n      lookup1.street = this.state.address_line1;\n      lookup1.street2 = this.state.address_line2;\n      lookup1.secondary = this.state.address_secondary;\n      lookup1.city = this.state.address_city;\n      lookup1.state = this.state.address_state;\n      lookup1.zipCode = this.state.address_zipcode;\n      lookup1.match = \"invalid\"; // \"invalid\" is the most permissive match\n\n      batch.add(lookup1);\n      verifyAddress.send(batch).then(response => {\n        response.lookups.map(lookup => {\n          if (lookup.result[0].analysis.dpvMatchCode === \"Y\") {\n            let res = lookup.result[0].lastLine.split(\" \");\n            this.setState({\n              address_line1: lookup.result[0].deliveryLine1.substring(0, this.state.address_line1.length),\n              address_city: res[0],\n              address_state: res[1],\n              address_zipcode: res[2]\n            });\n\n            if (lookup.result[0].deliveryLine2 != null) {\n              this.setState({\n                address_line2: lookup.result[0].deliveryLine2\n              });\n            }\n\n            this.address_verified = true;\n          } else {\n            this.address_verified = false;\n          }\n\n          return null;\n        });\n        resolve(\"resolved\");\n      }).catch(() => {\n        this.address_verified = false;\n        resolve(\"resolved\");\n      });\n    });\n  }\n\n  postOrdertoDB() {\n    return new Promise(resolve => {\n      axios.post(\"http://localhost:4000/catweallgetalong/orders/new-order\", this.cart).then(response => {\n        this.OrderID = response.data;\n        resolve(\"done\");\n      }).catch(function (error) {\n        console.log(error);\n        resolve(\"done\");\n      });\n    });\n  }\n\n  updateAccountWithOrderId() {\n    return new Promise(resolve => {\n      axios.post(\"http://localhost:4000/catweallgetalong/accounts/update\", {\n        _id: this.state.id,\n        orderId: this.OrderID\n      }).then(function (response) {\n        console.log(response);\n        resolve(\"resolved\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n  }\n\n  loadUserValues() {\n    return new Promise(resolve => {\n      axios.get(\"http://localhost:4000/catweallgetalong/sessions/user-info\").then(response => {\n        this.setState({\n          address_line1: response.data[0].shipping_address[0].street1,\n          address_line2: response.data[0].shipping_address[0].street2,\n          address_secondary: response.data[0].shipping_address[0].secondary,\n          address_zipcode: response.data[0].shipping_address[0].zipcode,\n          address_city: response.data[0].shipping_address[0].city,\n          address_state: response.data[0].shipping_address[0].state,\n          email_address: response.data[0].email_address,\n          first_name: response.data[0].first_name,\n          last_name: response.data[0].last_name,\n          id: response.data[0]._id\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n  }\n\n  sessionCheck() {\n    return new Promise(resolve => {\n      axios.get(\"http://localhost:4000/catweallgetalong/sessions/\").then(res => {\n        //do something\n        if (res.data === true) {\n          this.directTo = \"/checkout\";\n        } else {\n          this.directTo = \"/cart\";\n        }\n\n        resolve(\"resolved\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n  }\n\n  async handleOnSubmit(event) {\n    event.preventDefault(); // check address is valid\n\n    if (this.state.address_line1.length > 0 && this.state.address_city.length > 0 && this.state.address_state.length > 0 && this.state.address_zipcode.length > 0 && this.isAddressChanged) {\n      await this.verifyShippingAddress();\n    }\n\n    if (this.address_verified) {\n      // create order in db, and retrive the ID\n      await this.postOrdertoDB(); // add order id to account order_history\n\n      await this.updateAccountWithOrderId(); // show order confirmed with order id\n\n      this.setState({\n        order_confirmed: true\n      });\n    } else {\n      // inject red text informing what to fix\n      this.display_errors = true;\n      this.forceUpdate();\n    }\n  }\n\n  componentWillUnmount() {\n    // clear cart\n    if (this.directTo === \"/checkout\" && this.cart.length > 0) this.clearCart();\n  }\n\n  render() {\n    if (this.directTo === \"/cart\") {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: this.directTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 20\n        }\n      });\n    }\n\n    if (this.state.order_confirmed) {\n      console.log(this.cart);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-10 mx-auto text-center text-black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }, \"Your Order Was Confirmed\"), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 29\n        }\n      }, \"Order Number: \", this.OrderID))));\n    }\n\n    return /*#__PURE__*/React.createElement(ProductConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, value => {\n      const {\n        cart,\n        clearCart\n      } = value;\n      if (cart.length < 1) return /*#__PURE__*/React.createElement(Redirect, {\n        push: true,\n        to: \"/cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 49\n        }\n      });else {\n        this.cart = cart;\n        this.clearCart = clearCart;\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            margin: 50\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Title, {\n          name: \"Confirm\",\n          title: \"Shipping Address\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(HandleDisplayErrors, {\n          display_errors: this.display_errors,\n          address_verified: this.address_verified,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"addLine1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 45\n          }\n        }, \"Address Line 1\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"address\",\n          className: \"form-control\",\n          id: \"addLine1\",\n          placeholder: \"3901 SW 154th Ave\",\n          onChange: event => this.setState({\n            address_line1: event.target.value\n          }, () => {\n            this.isAddressChanged = true;\n          }),\n          value: this.state.address_line1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"addLine2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 45\n          }\n        }, \"Address Line 2\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"address\",\n          className: \"form-control\",\n          id: \"addLine2\",\n          placeholder: \"closest under the street\",\n          onChange: event => this.setState({\n            address_line2: event.target.value\n          }, () => {\n            this.isAddressChanged = true;\n          }),\n          value: this.state.address_line2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 45\n          }\n        }, \"Apt / Suite / Other\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"address\",\n          className: \"form-control\",\n          id: \"secondary\",\n          placeholder: \"Apt# 314\",\n          onChange: event => this.setState({\n            address_secondary: event.target.value\n          }, () => {\n            this.isAddressChanged = true;\n          }),\n          value: this.state.address_secondary,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"city\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 45\n          }\n        }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"address\",\n          className: \"form-control\",\n          id: \"city\",\n          placeholder: \"Davie\",\n          onChange: event => this.setState({\n            address_city: event.target.value\n          }, () => {\n            this.isAddressChanged = true;\n          }),\n          value: this.state.address_city,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"zip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 45\n          }\n        }, \"Zipcode\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"address\",\n          className: \"form-control\",\n          id: \"zip\",\n          placeholder: \"33331\",\n          onChange: event => this.setState({\n            address_zipcode: event.target.value\n          }, () => {\n            this.isAddressChanged = true;\n          }),\n          value: this.state.address_zipcode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"state\",\n          className: \"col-s control-label\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 45\n          }\n        }, \"State\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-s\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"select\", {\n          className: \"form-control\",\n          id: \"state\",\n          name: \"state\",\n          onChange: event => this.setState({\n            address_state: event.target.value\n          }, () => {\n            this.isAddressChanged = true;\n          }),\n          value: this.state.address_state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 53\n          }\n        }, \"N/A\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"AK\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 53\n          }\n        }, \"Alaska\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"AL\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 53\n          }\n        }, \"Alabama\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"AR\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 53\n          }\n        }, \"Arkansas\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"AZ\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 53\n          }\n        }, \"Arizona\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"CA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 53\n          }\n        }, \"California\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"CO\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 53\n          }\n        }, \"Colorado\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"CT\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 53\n          }\n        }, \"Connecticut\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"DC\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 53\n          }\n        }, \"District of Columbia\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"DE\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 53\n          }\n        }, \"Delaware\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"FL\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 53\n          }\n        }, \"Florida\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"GA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 53\n          }\n        }, \"Georgia\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"HI\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 53\n          }\n        }, \"Hawaii\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"IA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 53\n          }\n        }, \"Iowa\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"ID\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 53\n          }\n        }, \"Idaho\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"IL\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 53\n          }\n        }, \"Illinois\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"IN\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 53\n          }\n        }, \"Indiana\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"KS\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 53\n          }\n        }, \"Kansas\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"KY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 53\n          }\n        }, \"Kentucky\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"LA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 53\n          }\n        }, \"Louisiana\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"MA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 53\n          }\n        }, \"Massachusetts\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"MD\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 53\n          }\n        }, \"Maryland\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"ME\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 53\n          }\n        }, \"Maine\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"MI\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 53\n          }\n        }, \"Michigan\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"MN\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 53\n          }\n        }, \"Minnesota\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"MO\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 53\n          }\n        }, \"Missouri\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"MS\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 53\n          }\n        }, \"Mississippi\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"MT\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 53\n          }\n        }, \"Montana\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"NC\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 53\n          }\n        }, \"North Carolina\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"ND\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 53\n          }\n        }, \"North Dakota\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"NE\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 53\n          }\n        }, \"Nebraska\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"NH\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 53\n          }\n        }, \"New Hampshire\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"NJ\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 53\n          }\n        }, \"New Jersey\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"NM\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 53\n          }\n        }, \"New Mexico\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"NV\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 53\n          }\n        }, \"Nevada\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"NY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 53\n          }\n        }, \"New York\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"OH\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 53\n          }\n        }, \"Ohio\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"OK\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 53\n          }\n        }, \"Oklahoma\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"OR\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 53\n          }\n        }, \"Oregon\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"PA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 53\n          }\n        }, \"Pennsylvania\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"PR\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 53\n          }\n        }, \"Puerto Rico\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"RI\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 53\n          }\n        }, \"Rhode Island\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"SC\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 53\n          }\n        }, \"South Carolina\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"SD\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 53\n          }\n        }, \"South Dakota\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"TN\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 53\n          }\n        }, \"Tennessee\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"TX\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 53\n          }\n        }, \"Texas\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"UT\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 53\n          }\n        }, \"Utah\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"VA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 53\n          }\n        }, \"Virginia\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"VT\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 53\n          }\n        }, \"Vermont\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"WA\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 53\n          }\n        }, \"Washington\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"WI\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 53\n          }\n        }, \"Wisconsin\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"WV\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 53\n          }\n        }, \"West Virginia\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"WY\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 53\n          }\n        }, \"Wyoming\")))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success text-uppercase mb-3 px-5\",\n          onClick: this.handleOnSubmit.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 41\n          }\n        }, \"Submit Order\"))));\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/src/components/Cart/Checkout.js"],"names":["ProductConsumer","React","Component","Title","Redirect","axios","HandleDisplayErrors","props","buffer","display_errors","address_verified","push","color","padding","Checkout","constructor","state","address_line1","address_line2","address_secondary","address_zipcode","address_city","address_state","email_address","isAddressChanged","id","first_name","last_name","order_confirmed","cart","clearCart","OrderID","directTo","componentDidMount","sessionCheck","loadUserValues","forceUpdate","verifyShippingAddress","Promise","resolve","SmartyStreetsSDK","require","SmartyStreetsCore","core","Lookup","usStreet","authId","authToken","process","env","SMARTY_AUTH_TOKEN","credentials","StaticCredentials","verifyAddress","buildClient","batch","Batch","lookup1","street","street2","secondary","city","zipCode","match","add","send","then","response","lookups","map","lookup","result","analysis","dpvMatchCode","res","lastLine","split","setState","deliveryLine1","substring","length","deliveryLine2","catch","postOrdertoDB","post","data","error","console","log","updateAccountWithOrderId","_id","orderId","get","shipping_address","street1","zipcode","handleOnSubmit","event","preventDefault","componentWillUnmount","render","value","margin","target","bind"],"mappings":"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","sourcesContent":["import { ProductConsumer } from \"../../context-product\";\nimport React, { Component } from \"react\";\nimport Title from \"../../components/General/Title\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction HandleDisplayErrors(props) {\n    let buffer = [];\n    if (props.display_errors) {\n        if (!props.address_verified) {\n            buffer.push(\n                <div key=\"address1\" style={{ color: \"red\" }}>\n                    * Please enter a valid Shipping Address.\n                </div>\n            );\n        }\n    }\n    return <div style={{ padding: 10 }}>{buffer}</div>;\n}\n\nexport default class Checkout extends Component {\n    constructor(props) {\n        super(props);\n        // Assign state itself, and a default value for items\n        this.state = {\n            address_line1: \"\",\n            address_line2: \"\",\n            address_secondary: \"\",\n            address_zipcode: \"\",\n            address_city: \"\",\n            address_state: \"\",\n\n            email_address: \"\",\n            isAddressChanged: false,\n            id: \"\",\n            first_name: \"\",\n            last_name: \"\",\n\n            order_confirmed: false,\n        };\n\n        this.address_verified = true;\n        this.display_errors = false;\n        this.cart = [];\n        this.clearCart = [];\n        this.OrderID = \"\";\n        this.directTo = \"\";\n    }\n\n    async componentDidMount() {\n        await this.sessionCheck();\n        await this.loadUserValues();\n        this.forceUpdate();\n    }\n\n    verifyShippingAddress() {\n        return new Promise((resolve) => {\n            const SmartyStreetsSDK = require(\"smartystreets-javascript-sdk\");\n            const SmartyStreetsCore = SmartyStreetsSDK.core;\n            const Lookup = SmartyStreetsSDK.usStreet.Lookup;\n\n            let authId = 24176270692624972; // created on smartystreets account page for localhost\n            let authToken = process.env.SMARTY_AUTH_TOKEN;\n            const credentials = new SmartyStreetsCore.StaticCredentials(\n                authId,\n                authToken\n            );\n\n            let verifyAddress = SmartyStreetsCore.buildClient.usStreet(\n                credentials\n            );\n\n            let batch = new SmartyStreetsCore.Batch();\n            let lookup1 = new Lookup();\n\n            lookup1.street = this.state.address_line1;\n            lookup1.street2 = this.state.address_line2;\n            lookup1.secondary = this.state.address_secondary;\n            lookup1.city = this.state.address_city;\n            lookup1.state = this.state.address_state;\n            lookup1.zipCode = this.state.address_zipcode;\n            lookup1.match = \"invalid\"; // \"invalid\" is the most permissive match\n            batch.add(lookup1);\n            verifyAddress\n                .send(batch)\n                .then((response) => {\n                    response.lookups.map((lookup) => {\n                        if (lookup.result[0].analysis.dpvMatchCode === \"Y\") {\n                            let res = lookup.result[0].lastLine.split(\" \");\n                            this.setState({\n                                address_line1: lookup.result[0].deliveryLine1.substring(\n                                    0,\n                                    this.state.address_line1.length\n                                ),\n                                address_city: res[0],\n                                address_state: res[1],\n                                address_zipcode: res[2],\n                            });\n                            if (lookup.result[0].deliveryLine2 != null) {\n                                this.setState({\n                                    address_line2:\n                                        lookup.result[0].deliveryLine2,\n                                });\n                            }\n                            this.address_verified = true;\n                        } else {\n                            this.address_verified = false;\n                        }\n                        return null;\n                    });\n                    resolve(\"resolved\");\n                })\n                .catch(() => {\n                    this.address_verified = false;\n                    resolve(\"resolved\");\n                });\n        });\n    }\n\n    postOrdertoDB() {\n        return new Promise((resolve) => {\n            axios\n                .post(\n                    \"http://localhost:4000/catweallgetalong/orders/new-order\",\n                    this.cart\n                )\n                .then((response) => {\n                    this.OrderID = response.data;\n                    resolve(\"done\");\n                })\n                .catch(function (error) {\n                    console.log(error);\n                    resolve(\"done\");\n                });\n        });\n    }\n\n    updateAccountWithOrderId() {\n        return new Promise((resolve) => {\n            axios\n                .post(\n                    \"http://localhost:4000/catweallgetalong/accounts/update\",\n                    {\n                        _id: this.state.id,\n                        orderId: this.OrderID,\n                    }\n                )\n                .then(function (response) {\n                    console.log(response);\n                    resolve(\"resolved\");\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        });\n    }\n\n    loadUserValues() {\n        return new Promise((resolve) => {\n            axios\n                .get(\n                    \"http://localhost:4000/catweallgetalong/sessions/user-info\"\n                )\n                .then((response) => {\n                    this.setState({\n                        address_line1:\n                            response.data[0].shipping_address[0].street1,\n                        address_line2:\n                            response.data[0].shipping_address[0].street2,\n                        address_secondary:\n                            response.data[0].shipping_address[0].secondary,\n                        address_zipcode:\n                            response.data[0].shipping_address[0].zipcode,\n                        address_city: response.data[0].shipping_address[0].city,\n                        address_state:\n                            response.data[0].shipping_address[0].state,\n                        email_address: response.data[0].email_address,\n                        first_name: response.data[0].first_name,\n                        last_name: response.data[0].last_name,\n                        id: response.data[0]._id,\n                    });\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        });\n    }\n\n    sessionCheck() {\n        return new Promise((resolve) => {\n            axios\n                .get(\"http://localhost:4000/catweallgetalong/sessions/\")\n                .then((res) => {\n                    //do something\n                    if (res.data === true) {\n                        this.directTo = \"/checkout\";\n                    } else {\n                        this.directTo = \"/cart\";\n                    }\n\n                    resolve(\"resolved\");\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        });\n    }\n\n    async handleOnSubmit(event) {\n        event.preventDefault();\n\n        // check address is valid\n        if (\n            this.state.address_line1.length > 0 &&\n            this.state.address_city.length > 0 &&\n            this.state.address_state.length > 0 &&\n            this.state.address_zipcode.length > 0 &&\n            this.isAddressChanged\n        ) {\n            await this.verifyShippingAddress();\n        }\n\n        if (this.address_verified) {\n            // create order in db, and retrive the ID\n            await this.postOrdertoDB();\n            // add order id to account order_history\n            await this.updateAccountWithOrderId();\n            // show order confirmed with order id\n            this.setState({\n                order_confirmed: true,\n            });\n        } else {\n            // inject red text informing what to fix\n            this.display_errors = true;\n            this.forceUpdate();\n        }\n    }\n\n    componentWillUnmount() {\n        // clear cart\n        if (this.directTo === \"/checkout\" && this.cart.length > 0)\n            this.clearCart();\n    }\n\n    render() {\n        if (this.directTo === \"/cart\") {\n            return <Redirect to={this.directTo} />;\n        }\n        if (this.state.order_confirmed) {\n            console.log(this.cart);\n            return (\n                <div className=\"container mt-5\">\n                    <div className=\"row\">\n                        <div className=\"col-10 mx-auto text-center text-black\">\n                            <h1 className=\"mb-5\">Your Order Was Confirmed</h1>\n\n                            <h5>Order Number: {this.OrderID}</h5>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <ProductConsumer>\n                {(value) => {\n                    const { cart, clearCart } = value;\n                    if (cart.length < 1) return <Redirect push to=\"/cart\" />;\n                    else {\n                        this.cart = cart;\n                        this.clearCart = clearCart;\n                        return (\n                            <React.Fragment>\n                                <div style={{ margin: 50 }}>\n                                    <Title\n                                        name=\"Confirm\"\n                                        title=\"Shipping Address\"\n                                    />\n                                    <HandleDisplayErrors\n                                        display_errors={this.display_errors}\n                                        address_verified={this.address_verified}\n                                    />\n                                    <form>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"addLine1\">\n                                                Address Line 1\n                                            </label>\n                                            <input\n                                                type=\"address\"\n                                                className=\"form-control\"\n                                                id=\"addLine1\"\n                                                placeholder=\"3901 SW 154th Ave\"\n                                                onChange={(event) =>\n                                                    this.setState(\n                                                        {\n                                                            address_line1:\n                                                                event.target\n                                                                    .value,\n                                                        },\n                                                        () => {\n                                                            this.isAddressChanged = true;\n                                                        }\n                                                    )\n                                                }\n                                                value={this.state.address_line1}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"addLine2\">\n                                                Address Line 2\n                                            </label>\n                                            <input\n                                                type=\"address\"\n                                                className=\"form-control\"\n                                                id=\"addLine2\"\n                                                placeholder=\"closest under the street\"\n                                                onChange={(event) =>\n                                                    this.setState(\n                                                        {\n                                                            address_line2:\n                                                                event.target\n                                                                    .value,\n                                                        },\n                                                        () => {\n                                                            this.isAddressChanged = true;\n                                                        }\n                                                    )\n                                                }\n                                                value={this.state.address_line2}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"secondary\">\n                                                Apt / Suite / Other\n                                            </label>\n                                            <input\n                                                type=\"address\"\n                                                className=\"form-control\"\n                                                id=\"secondary\"\n                                                placeholder=\"Apt# 314\"\n                                                onChange={(event) =>\n                                                    this.setState(\n                                                        {\n                                                            address_secondary:\n                                                                event.target\n                                                                    .value,\n                                                        },\n                                                        () => {\n                                                            this.isAddressChanged = true;\n                                                        }\n                                                    )\n                                                }\n                                                value={\n                                                    this.state.address_secondary\n                                                }\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"city\">City</label>\n                                            <input\n                                                type=\"address\"\n                                                className=\"form-control\"\n                                                id=\"city\"\n                                                placeholder=\"Davie\"\n                                                onChange={(event) =>\n                                                    this.setState(\n                                                        {\n                                                            address_city:\n                                                                event.target\n                                                                    .value,\n                                                        },\n                                                        () => {\n                                                            this.isAddressChanged = true;\n                                                        }\n                                                    )\n                                                }\n                                                value={this.state.address_city}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"zip\">Zipcode</label>\n                                            <input\n                                                type=\"address\"\n                                                className=\"form-control\"\n                                                id=\"zip\"\n                                                placeholder=\"33331\"\n                                                onChange={(event) =>\n                                                    this.setState(\n                                                        {\n                                                            address_zipcode:\n                                                                event.target\n                                                                    .value,\n                                                        },\n                                                        () => {\n                                                            this.isAddressChanged = true;\n                                                        }\n                                                    )\n                                                }\n                                                value={\n                                                    this.state.address_zipcode\n                                                }\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label\n                                                htmlFor=\"state\"\n                                                className=\"col-s control-label\"\n                                            >\n                                                State\n                                            </label>\n                                            <div className=\"col-s\">\n                                                <select\n                                                    className=\"form-control\"\n                                                    id=\"state\"\n                                                    name=\"state\"\n                                                    onChange={(event) =>\n                                                        this.setState(\n                                                            {\n                                                                address_state:\n                                                                    event.target\n                                                                        .value,\n                                                            },\n                                                            () => {\n                                                                this.isAddressChanged = true;\n                                                            }\n                                                        )\n                                                    }\n                                                    value={\n                                                        this.state.address_state\n                                                    }\n                                                >\n                                                    <option value=\"\">\n                                                        N/A\n                                                    </option>\n                                                    <option value=\"AK\">\n                                                        Alaska\n                                                    </option>\n                                                    <option value=\"AL\">\n                                                        Alabama\n                                                    </option>\n                                                    <option value=\"AR\">\n                                                        Arkansas\n                                                    </option>\n                                                    <option value=\"AZ\">\n                                                        Arizona\n                                                    </option>\n                                                    <option value=\"CA\">\n                                                        California\n                                                    </option>\n                                                    <option value=\"CO\">\n                                                        Colorado\n                                                    </option>\n                                                    <option value=\"CT\">\n                                                        Connecticut\n                                                    </option>\n                                                    <option value=\"DC\">\n                                                        District of Columbia\n                                                    </option>\n                                                    <option value=\"DE\">\n                                                        Delaware\n                                                    </option>\n                                                    <option value=\"FL\">\n                                                        Florida\n                                                    </option>\n                                                    <option value=\"GA\">\n                                                        Georgia\n                                                    </option>\n                                                    <option value=\"HI\">\n                                                        Hawaii\n                                                    </option>\n                                                    <option value=\"IA\">\n                                                        Iowa\n                                                    </option>\n                                                    <option value=\"ID\">\n                                                        Idaho\n                                                    </option>\n                                                    <option value=\"IL\">\n                                                        Illinois\n                                                    </option>\n                                                    <option value=\"IN\">\n                                                        Indiana\n                                                    </option>\n                                                    <option value=\"KS\">\n                                                        Kansas\n                                                    </option>\n                                                    <option value=\"KY\">\n                                                        Kentucky\n                                                    </option>\n                                                    <option value=\"LA\">\n                                                        Louisiana\n                                                    </option>\n                                                    <option value=\"MA\">\n                                                        Massachusetts\n                                                    </option>\n                                                    <option value=\"MD\">\n                                                        Maryland\n                                                    </option>\n                                                    <option value=\"ME\">\n                                                        Maine\n                                                    </option>\n                                                    <option value=\"MI\">\n                                                        Michigan\n                                                    </option>\n                                                    <option value=\"MN\">\n                                                        Minnesota\n                                                    </option>\n                                                    <option value=\"MO\">\n                                                        Missouri\n                                                    </option>\n                                                    <option value=\"MS\">\n                                                        Mississippi\n                                                    </option>\n                                                    <option value=\"MT\">\n                                                        Montana\n                                                    </option>\n                                                    <option value=\"NC\">\n                                                        North Carolina\n                                                    </option>\n                                                    <option value=\"ND\">\n                                                        North Dakota\n                                                    </option>\n                                                    <option value=\"NE\">\n                                                        Nebraska\n                                                    </option>\n                                                    <option value=\"NH\">\n                                                        New Hampshire\n                                                    </option>\n                                                    <option value=\"NJ\">\n                                                        New Jersey\n                                                    </option>\n                                                    <option value=\"NM\">\n                                                        New Mexico\n                                                    </option>\n                                                    <option value=\"NV\">\n                                                        Nevada\n                                                    </option>\n                                                    <option value=\"NY\">\n                                                        New York\n                                                    </option>\n                                                    <option value=\"OH\">\n                                                        Ohio\n                                                    </option>\n                                                    <option value=\"OK\">\n                                                        Oklahoma\n                                                    </option>\n                                                    <option value=\"OR\">\n                                                        Oregon\n                                                    </option>\n                                                    <option value=\"PA\">\n                                                        Pennsylvania\n                                                    </option>\n                                                    <option value=\"PR\">\n                                                        Puerto Rico\n                                                    </option>\n                                                    <option value=\"RI\">\n                                                        Rhode Island\n                                                    </option>\n                                                    <option value=\"SC\">\n                                                        South Carolina\n                                                    </option>\n                                                    <option value=\"SD\">\n                                                        South Dakota\n                                                    </option>\n                                                    <option value=\"TN\">\n                                                        Tennessee\n                                                    </option>\n                                                    <option value=\"TX\">\n                                                        Texas\n                                                    </option>\n                                                    <option value=\"UT\">\n                                                        Utah\n                                                    </option>\n                                                    <option value=\"VA\">\n                                                        Virginia\n                                                    </option>\n                                                    <option value=\"VT\">\n                                                        Vermont\n                                                    </option>\n                                                    <option value=\"WA\">\n                                                        Washington\n                                                    </option>\n                                                    <option value=\"WI\">\n                                                        Wisconsin\n                                                    </option>\n                                                    <option value=\"WV\">\n                                                        West Virginia\n                                                    </option>\n                                                    <option value=\"WY\">\n                                                        Wyoming\n                                                    </option>\n                                                </select>\n                                            </div>\n                                        </div>\n\n                                        <button\n                                            className=\"btn btn-success text-uppercase mb-3 px-5\"\n                                            onClick={this.handleOnSubmit.bind(\n                                                this\n                                            )}\n                                        >\n                                            Submit Order\n                                        </button>\n                                    </form>\n                                </div>\n                            </React.Fragment>\n                        );\n                    }\n                }}\n            </ProductConsumer>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}