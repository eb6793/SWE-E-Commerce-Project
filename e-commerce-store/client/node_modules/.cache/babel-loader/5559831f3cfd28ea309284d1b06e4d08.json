{"ast":null,"code":"const Request = require(\"../Request\");\n\nconst Errors = require(\"../Errors\");\n\nconst Candidate = require(\"./Candidate\");\n\nconst Promise = require(\"promise\");\n\nconst buildInputData = require(\"../util/buildInputData\");\n\nconst keyTranslationFormat = require(\"../util/apiToSDKKeyMap\").internationalStreet;\n/**\n * This client sends lookups to the SmartyStreets International Street API, <br>\n *     and attaches the results to the appropriate Lookup objects.\n */\n\n\nclass Client {\n  constructor(sender) {\n    this.sender = sender;\n  }\n\n  send(lookup) {\n    if (typeof lookup === \"undefined\") throw new Errors.UndefinedLookupError();\n    let request = new Request();\n    request.parameters = buildInputData(lookup, keyTranslationFormat);\n    return new Promise((resolve, reject) => {\n      this.sender.send(request).then(response => {\n        if (response.error) reject(response.error);\n        resolve(attachLookupCandidates(response, lookup));\n      }).catch(reject);\n    });\n\n    function attachLookupCandidates(response, lookup) {\n      response.payload.map(rawCandidate => {\n        lookup.result.push(new Candidate(rawCandidate));\n      });\n      return lookup;\n    }\n  }\n\n}\n\nmodule.exports = Client;","map":{"version":3,"sources":["/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/node_modules/smartystreets-javascript-sdk/src/international_street/Client.js"],"names":["Request","require","Errors","Candidate","Promise","buildInputData","keyTranslationFormat","internationalStreet","Client","constructor","sender","send","lookup","UndefinedLookupError","request","parameters","resolve","reject","then","response","error","attachLookupCandidates","catch","payload","map","rawCandidate","result","push","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,wBAAD,CAA9B;;AACA,MAAMK,oBAAoB,GAAGL,OAAO,CAAC,wBAAD,CAAP,CAAkCM,mBAA/D;AAEA;;;;;;AAIA,MAAMC,MAAN,CAAa;AACZC,EAAAA,WAAW,CAACC,MAAD,EAAS;AACnB,SAAKA,MAAL,GAAcA,MAAd;AACA;;AAEDC,EAAAA,IAAI,CAACC,MAAD,EAAS;AACZ,QAAI,OAAOA,MAAP,KAAkB,WAAtB,EAAmC,MAAM,IAAIV,MAAM,CAACW,oBAAX,EAAN;AAEnC,QAAIC,OAAO,GAAG,IAAId,OAAJ,EAAd;AACAc,IAAAA,OAAO,CAACC,UAAR,GAAqBV,cAAc,CAACO,MAAD,EAASN,oBAAT,CAAnC;AAEA,WAAO,IAAIF,OAAJ,CAAY,CAACY,OAAD,EAAUC,MAAV,KAAqB;AACvC,WAAKP,MAAL,CAAYC,IAAZ,CAAiBG,OAAjB,EACEI,IADF,CACOC,QAAQ,IAAI;AACjB,YAAIA,QAAQ,CAACC,KAAb,EAAoBH,MAAM,CAACE,QAAQ,CAACC,KAAV,CAAN;AAEpBJ,QAAAA,OAAO,CAACK,sBAAsB,CAACF,QAAD,EAAWP,MAAX,CAAvB,CAAP;AACA,OALF,EAMEU,KANF,CAMQL,MANR;AAOA,KARM,CAAP;;AAUA,aAASI,sBAAT,CAAgCF,QAAhC,EAA0CP,MAA1C,EAAkD;AACjDO,MAAAA,QAAQ,CAACI,OAAT,CAAiBC,GAAjB,CAAqBC,YAAY,IAAI;AACpCb,QAAAA,MAAM,CAACc,MAAP,CAAcC,IAAd,CAAmB,IAAIxB,SAAJ,CAAcsB,YAAd,CAAnB;AACA,OAFD;AAIA,aAAOb,MAAP;AACA;AACD;;AA5BW;;AA+BbgB,MAAM,CAACC,OAAP,GAAiBrB,MAAjB","sourcesContent":["const Request = require(\"../Request\");\nconst Errors = require(\"../Errors\");\nconst Candidate = require(\"./Candidate\");\nconst Promise = require(\"promise\");\nconst buildInputData = require(\"../util/buildInputData\");\nconst keyTranslationFormat = require(\"../util/apiToSDKKeyMap\").internationalStreet;\n\n/**\n * This client sends lookups to the SmartyStreets International Street API, <br>\n *     and attaches the results to the appropriate Lookup objects.\n */\nclass Client {\n\tconstructor(sender) {\n\t\tthis.sender = sender;\n\t}\n\n\tsend(lookup) {\n\t\tif (typeof lookup === \"undefined\") throw new Errors.UndefinedLookupError();\n\n\t\tlet request = new Request();\n\t\trequest.parameters = buildInputData(lookup, keyTranslationFormat);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.sender.send(request)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.error) reject(response.error);\n\n\t\t\t\t\tresolve(attachLookupCandidates(response, lookup));\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t});\n\n\t\tfunction attachLookupCandidates(response, lookup) {\n\t\t\tresponse.payload.map(rawCandidate => {\n\t\t\t\tlookup.result.push(new Candidate(rawCandidate));\n\t\t\t});\n\n\t\t\treturn lookup;\n\t\t}\n\t}\n}\n\nmodule.exports = Client;"]},"metadata":{},"sourceType":"script"}