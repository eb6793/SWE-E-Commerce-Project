{"ast":null,"code":"const BatchFullError = require(\"./Errors\").BatchFullError;\n/**\n * This class contains a collection of up to 100 lookups to be sent to one of the SmartyStreets APIs<br>\n *     all at once. This is more efficient than sending them one at a time.\n */\n\n\nclass Batch {\n  constructor() {\n    this.lookups = [];\n  }\n\n  add(lookup) {\n    if (this.lookupsHasRoomForLookup()) this.lookups.push(lookup);else throw new BatchFullError();\n  }\n\n  lookupsHasRoomForLookup() {\n    const maxNumberOfLookups = 100;\n    return this.lookups.length < maxNumberOfLookups;\n  }\n\n  length() {\n    return this.lookups.length;\n  }\n\n  getByIndex(index) {\n    return this.lookups[index];\n  }\n\n  getByInputId(inputId) {\n    return this.lookups.filter(lookup => {\n      return lookup.inputId === inputId;\n    })[0];\n  }\n  /**\n   * Clears the lookups stored in the batch so it can be used again.<br>\n   *     This helps avoid the overhead of building a new Batch object for each group of lookups.\n   */\n\n\n  clear() {\n    this.lookups = [];\n  }\n\n  isEmpty() {\n    return this.length() === 0;\n  }\n\n}\n\nmodule.exports = Batch;","map":{"version":3,"sources":["/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/client/node_modules/smartystreets-javascript-sdk/src/Batch.js"],"names":["BatchFullError","require","Batch","constructor","lookups","add","lookup","lookupsHasRoomForLookup","push","maxNumberOfLookups","length","getByIndex","index","getByInputId","inputId","filter","clear","isEmpty","module","exports"],"mappings":"AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBD,cAA3C;AAEA;;;;;;AAIA,MAAME,KAAN,CAAY;AACXC,EAAAA,WAAW,GAAI;AACd,SAAKC,OAAL,GAAe,EAAf;AACA;;AAEDC,EAAAA,GAAG,CAAEC,MAAF,EAAU;AACZ,QAAI,KAAKC,uBAAL,EAAJ,EAAoC,KAAKH,OAAL,CAAaI,IAAb,CAAkBF,MAAlB,EAApC,KACK,MAAM,IAAIN,cAAJ,EAAN;AACL;;AAEDO,EAAAA,uBAAuB,GAAG;AACzB,UAAME,kBAAkB,GAAG,GAA3B;AACA,WAAO,KAAKL,OAAL,CAAaM,MAAb,GAAsBD,kBAA7B;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKN,OAAL,CAAaM,MAApB;AACA;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACjB,WAAO,KAAKR,OAAL,CAAaQ,KAAb,CAAP;AACA;;AAEDC,EAAAA,YAAY,CAACC,OAAD,EAAU;AACrB,WAAO,KAAKV,OAAL,CAAaW,MAAb,CAAoBT,MAAM,IAAI;AACpC,aAAOA,MAAM,CAACQ,OAAP,KAAmBA,OAA1B;AACA,KAFM,EAEJ,CAFI,CAAP;AAGA;AAED;;;;;;AAIAE,EAAAA,KAAK,GAAI;AACR,SAAKZ,OAAL,GAAe,EAAf;AACA;;AAEDa,EAAAA,OAAO,GAAI;AACV,WAAO,KAAKP,MAAL,OAAkB,CAAzB;AACA;;AAvCU;;AA0CZQ,MAAM,CAACC,OAAP,GAAiBjB,KAAjB","sourcesContent":["const BatchFullError = require(\"./Errors\").BatchFullError;\n\n/**\n * This class contains a collection of up to 100 lookups to be sent to one of the SmartyStreets APIs<br>\n *     all at once. This is more efficient than sending them one at a time.\n */\nclass Batch {\n\tconstructor () {\n\t\tthis.lookups = [];\n\t}\n\n\tadd (lookup) {\n\t\tif (this.lookupsHasRoomForLookup()) this.lookups.push(lookup);\n\t\telse throw new BatchFullError();\n\t}\n\n\tlookupsHasRoomForLookup() {\n\t\tconst maxNumberOfLookups = 100;\n\t\treturn this.lookups.length < maxNumberOfLookups;\n\t}\n\n\tlength() {\n\t\treturn this.lookups.length;\n\t}\n\n\tgetByIndex(index) {\n\t\treturn this.lookups[index];\n\t}\n\n\tgetByInputId(inputId) {\n\t\treturn this.lookups.filter(lookup => {\n\t\t\treturn lookup.inputId === inputId;\n\t\t})[0];\n\t}\n\n\t/**\n\t * Clears the lookups stored in the batch so it can be used again.<br>\n\t *     This helps avoid the overhead of building a new Batch object for each group of lookups.\n\t */\n\tclear () {\n\t\tthis.lookups = [];\n\t}\n\n\tisEmpty () {\n\t\treturn this.length() === 0;\n\t}\n}\n\nmodule.exports = Batch;"]},"metadata":{},"sourceType":"script"}