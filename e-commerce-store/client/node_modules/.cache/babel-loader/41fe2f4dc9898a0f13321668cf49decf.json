{"ast":null,"code":"var _jsxFileName = \"/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/src/context.js\";\nimport React, { Component } from 'react'; // removed storeProducts from {}\n\nimport { storeProducts, detailProduct } from './data'; // added for testing 4/10\n\nimport axios from 'axios';\nconst ProductContext = React.createContext(); //Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      axios.get('http://localhost:4000/products/').then(response => {\n        this.setState({\n          products: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      /*\n      storeProducts.forEach(item =>{\n          const singleItem = {...item};\n          tempProducts = [...tempProducts,singleItem];\n       })\n      this.setState(()=>{\n          return {products:tempProducts}\n      })*/\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      let tempCart = [...this.state.cart];\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.0825;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total,\n          cartContents: tempCart\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/products/').then(response => {\n      this.setState({\n        products: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/fazalmahmood/SWE-E-Commerce-Project/e-commerce-store/src/context.js"],"names":["React","Component","storeProducts","detailProduct","axios","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","get","then","response","setState","data","catch","error","console","log","getItem","id","product","find","item","handleDetail","addToCart","tempProducts","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","cartContents","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// removed storeProducts from {}\nimport {storeProducts, detailProduct} from './data';\n// added for testing 4/10\nimport axios from 'axios';\n\nconst ProductContext = React.createContext();\n//Provider\n//Consumer\n\n\n\nclass ProductProvider extends Component {\n    state ={\n        products:[],\n        detailProduct:detailProduct,\n        cart:[],\n        modalOpen: false,\n        modalProduct:detailProduct,\n        cartSubTotal:0,\n        cartTax:0,\n        cartTotal:0\n    };\n\n    /*componentDidMount(){\n        this.setProducts();\n    }*/\n    \n    // altered for testing\n    \n    setProducts = () =>{\n        axios.get('http://localhost:4000/products/')\n        .then(response => {\n            this.setState({ products: response.data});\n        })\n        .catch(function (error){\n            console.log(error); \n        })\n        /*\n        storeProducts.forEach(item =>{\n            const singleItem = {...item};\n            tempProducts = [...tempProducts,singleItem];\n\n        })\n        this.setState(()=>{\n            return {products:tempProducts}\n        })*/\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/products/')\n        .then(response => {\n            this.setState({ products: response.data});\n        })\n        .catch(function (error){\n            console.log(error); \n        })\n    }\n\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    }\n\n\n    handleDetail = (id) =>{\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct:product}\n        })\n    };\n\n    // Since not using data, need to determine how to alter data\n    addToCart = id => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n        this.setState(()=> {\n            return {products:tempProducts,cart:[...this.state.cart,product]};\n        },()=>{\n            this.addTotals();\n        }\n        );\n    };\n\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct:product,modalOpen:true}\n        })\n    };\n\n    closeModal = () => {\n        this.setState(() => {\n            return {modalOpen:false}\n        })\n    };\n\n    increment = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n\n        product.count = product.count + 1;\n        product.total = product.count * product.price;\n\n        this.setState(() => {\n            return {\n                cart:[...tempCart],\n            }\n        },()=>{\n            this.addTotals();\n        })\n    };\n\n    decrement = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item => item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n\n        product.count = product.count - 1;\n        if(product.count === 0) {\n            this.removeItem(id);\n        }\n        else {\n         product.total = product.count * product.price;\n\n         this.setState(() => {\n            return {\n                cart:[...tempCart],\n            }\n            },()=>{\n                this.addTotals();\n         })\n        }\n        \n    };\n\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n        \n        tempCart = tempCart.filter(item => item.id !== id);\n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n\n        this.setState(()=>{\n            return {\n                cart:[...tempCart],\n                products:[...tempProducts]\n            };\n        },()=>{\n            this.addTotals();\n        })\n    };\n\n    clearCart = () => {\n        this.setState(()=>{\n            return {cart:[]}\n        },()=>{\n            this.setProducts();\n            this.addTotals();\n        });\n    };\n\n    addTotals = () => {\n        let subTotal = 0;\n        let tempCart = [...this.state.cart];\n        this.state.cart.map(item =>(subTotal += item.total));\n        const tempTax = subTotal * 0.0825;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(()=> {\n            return {\n                cartSubTotal:subTotal,\n                cartTax:tax,\n                cartTotal:total,\n                cartContents:tempCart\n            }\n        })\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider \n            value={{\n                ...this.state,\n                handleDetail:this.handleDetail,\n                addToCart:this.addToCart,\n                openModal:this.openModal,\n                closeModal:this.closeModal,\n                increment:this.increment,\n                decrement:this.decrement,\n                removeItem:this.removeItem,\n                clearCart:this.clearCart\n            }}\n            >\n             {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider,ProductConsumer};"]},"metadata":{},"sourceType":"module"}